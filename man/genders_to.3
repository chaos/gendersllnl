\."#################################################################
\."$Id: genders_to.3,v 1.4 2003-05-22 00:36:02 achu Exp $
\."by Albert Chu <chu11@llnl.gov>
\."#################################################################
.\"
.TH GENDERS_TO_GENDNAME 3 "Release 1.1" "LLNL" "LIBGENDERSLLNL"
.SH NAME
genders_to_gendname, genders_to_gendname_preserve, genders_to_altname,
genders_to_altname_preserve - convert between genders node names and
alternate node names
.SH SYNOPSIS
.B #include <gendersllnl.h>
.sp
.BI "int genders_to_gendname(genders_t handle, const char *altnode, char *buf, int buflen);"
.sp
.BI "int genders_to_gendname_preserve(genders_t handle, const char *altnode, char *buf, int buflen);"
.sp
.BI "int genders_to_altname(genders_t handle, const char *node, char *buf, int buflen);"
.sp
.BI "int genders_to_altname_preseve(genders_t handle, const char *node, char *buf, int buflen);"
.br
.SH DESCRIPTION
\fBgenders_to_gendname()\fR, and \fBgenders_to_gendname_preserve()\fR
convert an alternate nodename \fIaltnode\fR into a genders nodename.
The genders nodename is stored in the buffer pointed to by \fIbuf\fR.
\fIbuflen\fR should indicate the length of the buffer.  If \fIaltnode\fR
is already a genders nodename, it will be copied into \fIbuf\fR.

\fBgenders_to_altname()\fR, and \fBgenders_to_altname_preserve()\fR
convert an genders nodename \fInode\fR into the node's alternate
nodename.  The alternate nodename is stored in the buffer pointed to
by \fIbuf\fR.  \fIbuflen\fR should indicate the length of the buffer.
If \fInode\fR is already an alternate nodename, it will be copied into
\fIbuf\fR.

The difference between the 'preserve' and 'non-preserve' conversion
functions depends on whether the nodename passed in is listed in the
genders file.  If the nodename is not found in the genders file,
\fBgenders_to_gendname()\fR and \fBgenders_to_altname()\fR will return
an error.  However, \fBgenders_to_gendname_preserve()\fR and
\fBgenders_to_altname_preserve()\fR will store the nodename that was
originally passed in into \fIbuf\fR.

To avoid passing in a buffer that is not large enough to store the
node name,
.BR genders_getmaxnodelen (3)
and
.BR genders_getmaxvallen (3)
should be used to determine the minimum buffer size that should be used for
.BR genders_to_gendname()
and
.BR genders_to_altname()
respectively.  The buffer should also be large enough to store the node
passed in for the respective 'preserve' functions.
.br
.SH RETURN VALUES
On success, \fBgenders_to_gendname()\fR,
\fBgenders_to_gendname_preserve()\fR, \fBgenders_to_altname()\fR, and
\fBgenders_to_altname_preserve()\fR return 0.  On error, -1 is
returned, and an error code is returned in \fIhandle\fR.  The error
code can be retrieved via
.BR genders_errnum (3)
, and a description of the error code can be retrieved via
.BR genders_strerror (3).  
Error codes are defined in genders.h.
.br
.SH ERRORS
.TP
.B GENDERS_ERR_NULLHANDLE
The \fIhandle\fR parameter is NULL.  The genders handle must be
created with
.BR genders_handle_create (3).
.TP
.B GENDERS_ERR_NOTLOADED
.BR genders_load_data (3)
has not been called to load genders data.  
.TP
.B GENDERS_ERR_OVERFLOW
The buffer pointed to by \fIbuf\fR is not large enough to store the
nodename.
.TP
.B GENDERS_ERR_PARAMETERS
An incorrect parameter has been passed in.  
.TP
.B GENDERS_ERR_NULLPTR
A null pointer has been found in the list passed in.
.TP
.B GENDERS_ERR_NOTFOUND
The nodename passed in cannot be found in the genders file.  
.TP
.B GENDERS_ERR_OUTMEM
.BR malloc (3)
has failed internally, system is out of memory.
.TP
.B GENDERS_ERR_MAGIC 
\fIhandle\fR has an incorrect magic number.  \fIhandle\fR does not
point to a genders handle or \fIhandle\fR has been destroyed by
.BR genders_handle_destroy (3).
.TP
.B GENDERS_ERR_INTERNAL
An internal system error has occurred.  
.br
.SH FILES
/usr/include/genders.h

/usr/include/gendersllnl.h
.SH SEE ALSO
libgenders(3), libgendersllnl(3), genders_handle_create(3),
genders_load_data(3), genders_errnum(3), genders_strerror(3)
